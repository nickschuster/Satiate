type User @model @auth(rules: [{ allow: owner }]) {
  id: ID! # Cognito SUB
  username: String!
  parameters: [Parameter] @connection(keyName: "byUser", fields: ["id"])
  days: [Day] @connection(keyName: "byUser", fields: ["id"])
  savedMeals: [SavedMeal] @connection(keyName: "byUser", fields: ["id"])
  savedIngredients: [SavedIngredient] @connection(keyName: "byUser", fields: ["id"])
}

type Day @model @auth(rules: [{ allow: owner }]) @key(name: "byUser", fields: ["userID"]) {
  userID: ID!
  id: ID! # Days since epoch
  pretty: Float!
  meals: [Meal]
  calorieGoal: Int
  proteinGoal: Int
  fatGoal: Int
  carbGoal: Int
}

type Meal {
  name: String
  ingredients: [Ingredient]
}

type Ingredient {
  name: String
  calories: Int
  protein: Int
  fat: Int
  carbs: Int
}

type SavedMeal @model @auth(rules: [{ allow: owner }]) @key(name: "byUser", fields: ["userID"]) {
  userID: ID!
  name: String
  ingredients: [Ingredient]
}

type SavedIngredient @model @auth(rules: [{ allow: owner }]) @key(name: "byUser", fields: ["userID"]) {
  userID: ID!
  name: String
  calories: Int
  protein: Int
  fat: Int
  carbs: Int
}

type Parameter @model @auth(rules: [{ allow: owner }]) @key(name: "byUser", fields: ["userID"]) {
  userID: ID!
  key: String!
  value: String!
}
